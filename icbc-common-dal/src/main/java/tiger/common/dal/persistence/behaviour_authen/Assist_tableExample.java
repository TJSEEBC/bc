package tiger.common.dal.persistence.behaviour_authen;

import java.util.ArrayList;
import java.util.List;

public class Assist_tableExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    public Assist_tableExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUserIsNull() {
            addCriterion("user is null");
            return (Criteria) this;
        }

        public Criteria andUserIsNotNull() {
            addCriterion("user is not null");
            return (Criteria) this;
        }

        public Criteria andUserEqualTo(Integer value) {
            addCriterion("user =", value, "user");
            return (Criteria) this;
        }

        public Criteria andUserNotEqualTo(Integer value) {
            addCriterion("user <>", value, "user");
            return (Criteria) this;
        }

        public Criteria andUserGreaterThan(Integer value) {
            addCriterion("user >", value, "user");
            return (Criteria) this;
        }

        public Criteria andUserGreaterThanOrEqualTo(Integer value) {
            addCriterion("user >=", value, "user");
            return (Criteria) this;
        }

        public Criteria andUserLessThan(Integer value) {
            addCriterion("user <", value, "user");
            return (Criteria) this;
        }

        public Criteria andUserLessThanOrEqualTo(Integer value) {
            addCriterion("user <=", value, "user");
            return (Criteria) this;
        }

        public Criteria andUserIn(List<Integer> values) {
            addCriterion("user in", values, "user");
            return (Criteria) this;
        }

        public Criteria andUserNotIn(List<Integer> values) {
            addCriterion("user not in", values, "user");
            return (Criteria) this;
        }

        public Criteria andUserBetween(Integer value1, Integer value2) {
            addCriterion("user between", value1, value2, "user");
            return (Criteria) this;
        }

        public Criteria andUserNotBetween(Integer value1, Integer value2) {
            addCriterion("user not between", value1, value2, "user");
            return (Criteria) this;
        }

        public Criteria andWeekdayNumIsNull() {
            addCriterion("weekday_num is null");
            return (Criteria) this;
        }

        public Criteria andWeekdayNumIsNotNull() {
            addCriterion("weekday_num is not null");
            return (Criteria) this;
        }

        public Criteria andWeekdayNumEqualTo(Integer value) {
            addCriterion("weekday_num =", value, "weekdayNum");
            return (Criteria) this;
        }

        public Criteria andWeekdayNumNotEqualTo(Integer value) {
            addCriterion("weekday_num <>", value, "weekdayNum");
            return (Criteria) this;
        }

        public Criteria andWeekdayNumGreaterThan(Integer value) {
            addCriterion("weekday_num >", value, "weekdayNum");
            return (Criteria) this;
        }

        public Criteria andWeekdayNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("weekday_num >=", value, "weekdayNum");
            return (Criteria) this;
        }

        public Criteria andWeekdayNumLessThan(Integer value) {
            addCriterion("weekday_num <", value, "weekdayNum");
            return (Criteria) this;
        }

        public Criteria andWeekdayNumLessThanOrEqualTo(Integer value) {
            addCriterion("weekday_num <=", value, "weekdayNum");
            return (Criteria) this;
        }

        public Criteria andWeekdayNumIn(List<Integer> values) {
            addCriterion("weekday_num in", values, "weekdayNum");
            return (Criteria) this;
        }

        public Criteria andWeekdayNumNotIn(List<Integer> values) {
            addCriterion("weekday_num not in", values, "weekdayNum");
            return (Criteria) this;
        }

        public Criteria andWeekdayNumBetween(Integer value1, Integer value2) {
            addCriterion("weekday_num between", value1, value2, "weekdayNum");
            return (Criteria) this;
        }

        public Criteria andWeekdayNumNotBetween(Integer value1, Integer value2) {
            addCriterion("weekday_num not between", value1, value2, "weekdayNum");
            return (Criteria) this;
        }

        public Criteria andWeekendNumIsNull() {
            addCriterion("weekend_num is null");
            return (Criteria) this;
        }

        public Criteria andWeekendNumIsNotNull() {
            addCriterion("weekend_num is not null");
            return (Criteria) this;
        }

        public Criteria andWeekendNumEqualTo(Integer value) {
            addCriterion("weekend_num =", value, "weekendNum");
            return (Criteria) this;
        }

        public Criteria andWeekendNumNotEqualTo(Integer value) {
            addCriterion("weekend_num <>", value, "weekendNum");
            return (Criteria) this;
        }

        public Criteria andWeekendNumGreaterThan(Integer value) {
            addCriterion("weekend_num >", value, "weekendNum");
            return (Criteria) this;
        }

        public Criteria andWeekendNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("weekend_num >=", value, "weekendNum");
            return (Criteria) this;
        }

        public Criteria andWeekendNumLessThan(Integer value) {
            addCriterion("weekend_num <", value, "weekendNum");
            return (Criteria) this;
        }

        public Criteria andWeekendNumLessThanOrEqualTo(Integer value) {
            addCriterion("weekend_num <=", value, "weekendNum");
            return (Criteria) this;
        }

        public Criteria andWeekendNumIn(List<Integer> values) {
            addCriterion("weekend_num in", values, "weekendNum");
            return (Criteria) this;
        }

        public Criteria andWeekendNumNotIn(List<Integer> values) {
            addCriterion("weekend_num not in", values, "weekendNum");
            return (Criteria) this;
        }

        public Criteria andWeekendNumBetween(Integer value1, Integer value2) {
            addCriterion("weekend_num between", value1, value2, "weekendNum");
            return (Criteria) this;
        }

        public Criteria andWeekendNumNotBetween(Integer value1, Integer value2) {
            addCriterion("weekend_num not between", value1, value2, "weekendNum");
            return (Criteria) this;
        }

        public Criteria andFestivalNumIsNull() {
            addCriterion("festival_num is null");
            return (Criteria) this;
        }

        public Criteria andFestivalNumIsNotNull() {
            addCriterion("festival_num is not null");
            return (Criteria) this;
        }

        public Criteria andFestivalNumEqualTo(Integer value) {
            addCriterion("festival_num =", value, "festivalNum");
            return (Criteria) this;
        }

        public Criteria andFestivalNumNotEqualTo(Integer value) {
            addCriterion("festival_num <>", value, "festivalNum");
            return (Criteria) this;
        }

        public Criteria andFestivalNumGreaterThan(Integer value) {
            addCriterion("festival_num >", value, "festivalNum");
            return (Criteria) this;
        }

        public Criteria andFestivalNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("festival_num >=", value, "festivalNum");
            return (Criteria) this;
        }

        public Criteria andFestivalNumLessThan(Integer value) {
            addCriterion("festival_num <", value, "festivalNum");
            return (Criteria) this;
        }

        public Criteria andFestivalNumLessThanOrEqualTo(Integer value) {
            addCriterion("festival_num <=", value, "festivalNum");
            return (Criteria) this;
        }

        public Criteria andFestivalNumIn(List<Integer> values) {
            addCriterion("festival_num in", values, "festivalNum");
            return (Criteria) this;
        }

        public Criteria andFestivalNumNotIn(List<Integer> values) {
            addCriterion("festival_num not in", values, "festivalNum");
            return (Criteria) this;
        }

        public Criteria andFestivalNumBetween(Integer value1, Integer value2) {
            addCriterion("festival_num between", value1, value2, "festivalNum");
            return (Criteria) this;
        }

        public Criteria andFestivalNumNotBetween(Integer value1, Integer value2) {
            addCriterion("festival_num not between", value1, value2, "festivalNum");
            return (Criteria) this;
        }

        public Criteria andNormalDayNumIsNull() {
            addCriterion("normal_day_num is null");
            return (Criteria) this;
        }

        public Criteria andNormalDayNumIsNotNull() {
            addCriterion("normal_day_num is not null");
            return (Criteria) this;
        }

        public Criteria andNormalDayNumEqualTo(Integer value) {
            addCriterion("normal_day_num =", value, "normalDayNum");
            return (Criteria) this;
        }

        public Criteria andNormalDayNumNotEqualTo(Integer value) {
            addCriterion("normal_day_num <>", value, "normalDayNum");
            return (Criteria) this;
        }

        public Criteria andNormalDayNumGreaterThan(Integer value) {
            addCriterion("normal_day_num >", value, "normalDayNum");
            return (Criteria) this;
        }

        public Criteria andNormalDayNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("normal_day_num >=", value, "normalDayNum");
            return (Criteria) this;
        }

        public Criteria andNormalDayNumLessThan(Integer value) {
            addCriterion("normal_day_num <", value, "normalDayNum");
            return (Criteria) this;
        }

        public Criteria andNormalDayNumLessThanOrEqualTo(Integer value) {
            addCriterion("normal_day_num <=", value, "normalDayNum");
            return (Criteria) this;
        }

        public Criteria andNormalDayNumIn(List<Integer> values) {
            addCriterion("normal_day_num in", values, "normalDayNum");
            return (Criteria) this;
        }

        public Criteria andNormalDayNumNotIn(List<Integer> values) {
            addCriterion("normal_day_num not in", values, "normalDayNum");
            return (Criteria) this;
        }

        public Criteria andNormalDayNumBetween(Integer value1, Integer value2) {
            addCriterion("normal_day_num between", value1, value2, "normalDayNum");
            return (Criteria) this;
        }

        public Criteria andNormalDayNumNotBetween(Integer value1, Integer value2) {
            addCriterion("normal_day_num not between", value1, value2, "normalDayNum");
            return (Criteria) this;
        }

        public Criteria andMeanTimeIsNull() {
            addCriterion("mean_time is null");
            return (Criteria) this;
        }

        public Criteria andMeanTimeIsNotNull() {
            addCriterion("mean_time is not null");
            return (Criteria) this;
        }

        public Criteria andMeanTimeEqualTo(Float value) {
            addCriterion("mean_time =", value, "meanTime");
            return (Criteria) this;
        }

        public Criteria andMeanTimeNotEqualTo(Float value) {
            addCriterion("mean_time <>", value, "meanTime");
            return (Criteria) this;
        }

        public Criteria andMeanTimeGreaterThan(Float value) {
            addCriterion("mean_time >", value, "meanTime");
            return (Criteria) this;
        }

        public Criteria andMeanTimeGreaterThanOrEqualTo(Float value) {
            addCriterion("mean_time >=", value, "meanTime");
            return (Criteria) this;
        }

        public Criteria andMeanTimeLessThan(Float value) {
            addCriterion("mean_time <", value, "meanTime");
            return (Criteria) this;
        }

        public Criteria andMeanTimeLessThanOrEqualTo(Float value) {
            addCriterion("mean_time <=", value, "meanTime");
            return (Criteria) this;
        }

        public Criteria andMeanTimeIn(List<Float> values) {
            addCriterion("mean_time in", values, "meanTime");
            return (Criteria) this;
        }

        public Criteria andMeanTimeNotIn(List<Float> values) {
            addCriterion("mean_time not in", values, "meanTime");
            return (Criteria) this;
        }

        public Criteria andMeanTimeBetween(Float value1, Float value2) {
            addCriterion("mean_time between", value1, value2, "meanTime");
            return (Criteria) this;
        }

        public Criteria andMeanTimeNotBetween(Float value1, Float value2) {
            addCriterion("mean_time not between", value1, value2, "meanTime");
            return (Criteria) this;
        }

        public Criteria andVarTimeIsNull() {
            addCriterion("var_time is null");
            return (Criteria) this;
        }

        public Criteria andVarTimeIsNotNull() {
            addCriterion("var_time is not null");
            return (Criteria) this;
        }

        public Criteria andVarTimeEqualTo(Float value) {
            addCriterion("var_time =", value, "varTime");
            return (Criteria) this;
        }

        public Criteria andVarTimeNotEqualTo(Float value) {
            addCriterion("var_time <>", value, "varTime");
            return (Criteria) this;
        }

        public Criteria andVarTimeGreaterThan(Float value) {
            addCriterion("var_time >", value, "varTime");
            return (Criteria) this;
        }

        public Criteria andVarTimeGreaterThanOrEqualTo(Float value) {
            addCriterion("var_time >=", value, "varTime");
            return (Criteria) this;
        }

        public Criteria andVarTimeLessThan(Float value) {
            addCriterion("var_time <", value, "varTime");
            return (Criteria) this;
        }

        public Criteria andVarTimeLessThanOrEqualTo(Float value) {
            addCriterion("var_time <=", value, "varTime");
            return (Criteria) this;
        }

        public Criteria andVarTimeIn(List<Float> values) {
            addCriterion("var_time in", values, "varTime");
            return (Criteria) this;
        }

        public Criteria andVarTimeNotIn(List<Float> values) {
            addCriterion("var_time not in", values, "varTime");
            return (Criteria) this;
        }

        public Criteria andVarTimeBetween(Float value1, Float value2) {
            addCriterion("var_time between", value1, value2, "varTime");
            return (Criteria) this;
        }

        public Criteria andVarTimeNotBetween(Float value1, Float value2) {
            addCriterion("var_time not between", value1, value2, "varTime");
            return (Criteria) this;
        }

        public Criteria andMeanMoneyIsNull() {
            addCriterion("mean_money is null");
            return (Criteria) this;
        }

        public Criteria andMeanMoneyIsNotNull() {
            addCriterion("mean_money is not null");
            return (Criteria) this;
        }

        public Criteria andMeanMoneyEqualTo(Float value) {
            addCriterion("mean_money =", value, "meanMoney");
            return (Criteria) this;
        }

        public Criteria andMeanMoneyNotEqualTo(Float value) {
            addCriterion("mean_money <>", value, "meanMoney");
            return (Criteria) this;
        }

        public Criteria andMeanMoneyGreaterThan(Float value) {
            addCriterion("mean_money >", value, "meanMoney");
            return (Criteria) this;
        }

        public Criteria andMeanMoneyGreaterThanOrEqualTo(Float value) {
            addCriterion("mean_money >=", value, "meanMoney");
            return (Criteria) this;
        }

        public Criteria andMeanMoneyLessThan(Float value) {
            addCriterion("mean_money <", value, "meanMoney");
            return (Criteria) this;
        }

        public Criteria andMeanMoneyLessThanOrEqualTo(Float value) {
            addCriterion("mean_money <=", value, "meanMoney");
            return (Criteria) this;
        }

        public Criteria andMeanMoneyIn(List<Float> values) {
            addCriterion("mean_money in", values, "meanMoney");
            return (Criteria) this;
        }

        public Criteria andMeanMoneyNotIn(List<Float> values) {
            addCriterion("mean_money not in", values, "meanMoney");
            return (Criteria) this;
        }

        public Criteria andMeanMoneyBetween(Float value1, Float value2) {
            addCriterion("mean_money between", value1, value2, "meanMoney");
            return (Criteria) this;
        }

        public Criteria andMeanMoneyNotBetween(Float value1, Float value2) {
            addCriterion("mean_money not between", value1, value2, "meanMoney");
            return (Criteria) this;
        }

        public Criteria andVarMoneyIsNull() {
            addCriterion("var_money is null");
            return (Criteria) this;
        }

        public Criteria andVarMoneyIsNotNull() {
            addCriterion("var_money is not null");
            return (Criteria) this;
        }

        public Criteria andVarMoneyEqualTo(Float value) {
            addCriterion("var_money =", value, "varMoney");
            return (Criteria) this;
        }

        public Criteria andVarMoneyNotEqualTo(Float value) {
            addCriterion("var_money <>", value, "varMoney");
            return (Criteria) this;
        }

        public Criteria andVarMoneyGreaterThan(Float value) {
            addCriterion("var_money >", value, "varMoney");
            return (Criteria) this;
        }

        public Criteria andVarMoneyGreaterThanOrEqualTo(Float value) {
            addCriterion("var_money >=", value, "varMoney");
            return (Criteria) this;
        }

        public Criteria andVarMoneyLessThan(Float value) {
            addCriterion("var_money <", value, "varMoney");
            return (Criteria) this;
        }

        public Criteria andVarMoneyLessThanOrEqualTo(Float value) {
            addCriterion("var_money <=", value, "varMoney");
            return (Criteria) this;
        }

        public Criteria andVarMoneyIn(List<Float> values) {
            addCriterion("var_money in", values, "varMoney");
            return (Criteria) this;
        }

        public Criteria andVarMoneyNotIn(List<Float> values) {
            addCriterion("var_money not in", values, "varMoney");
            return (Criteria) this;
        }

        public Criteria andVarMoneyBetween(Float value1, Float value2) {
            addCriterion("var_money between", value1, value2, "varMoney");
            return (Criteria) this;
        }

        public Criteria andVarMoneyNotBetween(Float value1, Float value2) {
            addCriterion("var_money not between", value1, value2, "varMoney");
            return (Criteria) this;
        }

        public Criteria andTotalTradeNumIsNull() {
            addCriterion("total_trade_num is null");
            return (Criteria) this;
        }

        public Criteria andTotalTradeNumIsNotNull() {
            addCriterion("total_trade_num is not null");
            return (Criteria) this;
        }

        public Criteria andTotalTradeNumEqualTo(Integer value) {
            addCriterion("total_trade_num =", value, "totalTradeNum");
            return (Criteria) this;
        }

        public Criteria andTotalTradeNumNotEqualTo(Integer value) {
            addCriterion("total_trade_num <>", value, "totalTradeNum");
            return (Criteria) this;
        }

        public Criteria andTotalTradeNumGreaterThan(Integer value) {
            addCriterion("total_trade_num >", value, "totalTradeNum");
            return (Criteria) this;
        }

        public Criteria andTotalTradeNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("total_trade_num >=", value, "totalTradeNum");
            return (Criteria) this;
        }

        public Criteria andTotalTradeNumLessThan(Integer value) {
            addCriterion("total_trade_num <", value, "totalTradeNum");
            return (Criteria) this;
        }

        public Criteria andTotalTradeNumLessThanOrEqualTo(Integer value) {
            addCriterion("total_trade_num <=", value, "totalTradeNum");
            return (Criteria) this;
        }

        public Criteria andTotalTradeNumIn(List<Integer> values) {
            addCriterion("total_trade_num in", values, "totalTradeNum");
            return (Criteria) this;
        }

        public Criteria andTotalTradeNumNotIn(List<Integer> values) {
            addCriterion("total_trade_num not in", values, "totalTradeNum");
            return (Criteria) this;
        }

        public Criteria andTotalTradeNumBetween(Integer value1, Integer value2) {
            addCriterion("total_trade_num between", value1, value2, "totalTradeNum");
            return (Criteria) this;
        }

        public Criteria andTotalTradeNumNotBetween(Integer value1, Integer value2) {
            addCriterion("total_trade_num not between", value1, value2, "totalTradeNum");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table assist_table
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table assist_table
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}